name: Release
on:
  push:
    branches:
      - main

permissions:
  contents: write # needed to write releases
  id-token: write # needed for keyless signing
  packages: write # needed for ghcr access
  pull-requests: write
  issues: write

env:
  GO_VERSION: 1.22.3
  REGISTRY: ghcr.io

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        id: release
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      release_tag_name: ${{ steps.release.outputs.tag_name }}
      paths_released: ${{ steps.release.outputs.paths_released }}
      chart_release_created: ${{ steps.release.outputs['charts/loki-gateway--release_created'] || steps.release.outputs['charts/mimir-gateway--release_created'] }}
      chart_tag_name: ${{ steps.release.outputs['charts/loki-gateway--tag_name'] || steps.release.outputs['charts/mimir-gateway--tag_name'] }}

  go-release:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.release_created }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.release_tag_name }}

      - name: Setup Cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Setup Syft
        uses: anchore/sbom-action/download-syft@v0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  chart-release:
    needs: release-please
    runs-on: ubuntu-latest
    if: ${{ needs.release-please.outputs.chart_release_created }}
    strategy:
      matrix:
        path_released: ${{ fromJson(needs.release-please.outputs.paths_released) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.release-please.outputs.chart_tag_name }}

      - name: Fetch history
        run: git fetch --prune --unshallow

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Setup Helm
        uses: azure/setup-helm@v4
        with:
          version: v3.15.0

      # see https://github.com/helm/chart-releaser/issues/183
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.5.0

      - name: Package Helm charts
        run: |
          helm package -d .cr-release-packages ${{ matrix.path_released }}

      - name: Push Helm charts to GHCR and sign
        env:
          COSIGN_EXPERIMENTAL: 1
        # when filling gaps with previously released charts, cr would create
        # nothing in .cr-release-packages/, and the original globbing character
        # would be preserved, causing a non-zero exit. Set nullglob to fix this
        run: |
          shopt -s nullglob
          for pkg in .cr-release-packages/*; do
            if [ -z "${pkg:-}" ]; then
              break
            fi
            helm push "${pkg}" oci://${{ env.REGISTRY }}/${{ github.repository_owner }}/charts > .digest 2>&1
            cosign sign $(cat .digest | awk -F "[, ]+" '/Pushed/{print $NF}') --yes
          done
