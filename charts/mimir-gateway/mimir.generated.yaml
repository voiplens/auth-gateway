---
# Source: mimir-gateway/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mimir-gateway
  labels:
    helm.sh/chart: mimir-gateway-0.1.7
    app.kubernetes.io/name: mimir-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
---
# Source: mimir-gateway/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-mimir-gateway
  labels:
    helm.sh/chart: mimir-gateway-0.1.7
    app.kubernetes.io/name: mimir-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: mimir-gateway
    app.kubernetes.io/instance: release-name
---
# Source: mimir-gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: release-name-mimir-gateway
  labels:
    helm.sh/chart: mimir-gateway-0.1.7
    app.kubernetes.io/name: mimir-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 10%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: mimir-gateway
      app.kubernetes.io/instance: release-name
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mimir-gateway
        app.kubernetes.io/instance: release-name
    spec:
      serviceAccountName: mimir-gateway
      securityContext:
        {}
      containers:
        - name: mimir-gateway
          securityContext:
            {}
          image: "ghcr.io/celest-io/mimir-gateway/mimir-gateway:1.2.0"
          imagePullPolicy: IfNotPresent
          args:
          - --gateway.distributor.address=http://mimir-distributor-headless.mimir.svc:9095
          - --gateway.query-frontend.address=http://mimir-query-frontend.mimir.svc:8080
          - --gateway.ruler.address=http://mimir-ruler.mimir.svc:8080
          - --gateway.alertmanager.address=http://mimir-alertmanager.mimir.svc:8080
          - --gateway.auth.jwt-secret=${jwt_secret}
          - --gateway.auth.jwt-extra-headers=X-Id-Token,JWT-ID
          - --gateway.auth.tenant-id-claim=https://angarium.io/org_id
          - --gateway.auth.jwks-url=https://angarium.eu.auth0.com/.well-known/jwks.json
          - --gateway.auth.jwks-refresh-enabled
          - --gateway.auth.jwks-refresh-interval=10
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            {}
---
# Source: mimir-gateway/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: release-name-mimir-gateway
  labels:
    helm.sh/chart: mimir-gateway-0.1.7
    app.kubernetes.io/name: mimir-gateway
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "v1.3.0"
    app.kubernetes.io/managed-by: Helm
  namespace: "default"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - "mimir.test.celest.io"
      secretName: mimir-tls
  rules:
    - host: "mimir.test.celest.io"
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: release-name-mimir-gateway
                port:
                  number: 80
